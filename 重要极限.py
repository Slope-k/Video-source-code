from os import write
from re import S

from numpy.lib.function_base import gradient
from manimlib.imports import *
from math import *
from NumberCreature.NumberCreature import *


class yinru(Scene):
    def construct(self):
        text1 = TextMobject("异常抽象","的","问题","，必须讨论得","异常清楚","。")
        text1[0].set_color(RED_B)
        text1[2].set_color(GREEN)
        text1[4].set_color(BLUE)
        text2 = TextMobject("——笛卡尔").shift(5*RIGHT+2*DOWN)
        
        self.play(Write(text1))
        self.play(Write(text2))
        self.wait(3)

class frist(Scene):
    def construct(self):
        Ale1 = Alex1().set_color(GREEN)
        text1 = TextMobject("对于一个初学极限的同学来说").to_edge(DOWN)
        text2 = TexMobject(r"f(x)=\frac{\sin(x)}{x}").scale(1.5).set_color(YELLOW).next_to(Ale1,RIGHT)
        text3 = TextMobject("这个函数一定不会陌生").to_edge(DOWN)
        text_a = VGroup(Ale1,text3,text2)
        re1 = Rectangle(
            height=7,
            width=5,
            fill_opacity=0.0,
            stroke_color=WHITE,
            storke_width=10,
            storke_opacity=0.0,
        ).to_edge(LEFT)
        text4 = TextMobject("硬核试卷:").scale(0.9).to_edge(2*UP+2*LEFT)
        text5 = TexMobject(r"\lim_{x \to 0} \frac{\sin (\sin x)}{\sin x} =").to_edge(3.5*UP+LEFT).set_color(RED_D)
        text5_da = TexMobject(r"1").set_color(BLUE).scale(0.8).next_to(text5,RIGHT)
        text6 = TexMobject(
            r"\lim_{x \to 0} \frac{\sin x^{\circ} }{x^{\circ }}= ").next_to(text4, DOWN,2.5).set_color(GREEN)
        text6_da = TexMobject(
            r"\frac{\pi}{180}").set_color(RED_D).scale(0.8).next_to(text6,RIGHT)
        text7 = TexMobject(
            r"\lim_{\text{狗} \to 0} \frac{\sin (\text{狗}) }{\text{狗}}= ").next_to(text6, DOWN,1).scale(0.9).set_color(BLUE)
        text7_da = TexMobject(r"1").set_color(GREEN).scale(0.8).next_to(text7,RIGHT)
        text_b = VGroup(text5_da,text6_da,text7_da)
        text8 = TextMobject("它可以以","各种形式","出现","在试卷上").to_corner(UR)
        text9 = TextMobject("但指向的却是","同一个结论","↓").next_to(text8,DOWN)
        text8[1].set_color_by_gradient([GREEN,YELLOW,ORANGE,PINK])
        text9[1].set_color(GREEN)
        text10 = TexMobject(r"\lim_{x \to 0} \frac{\sin x }{x}=1").next_to(text9,DOWN,2).set_color_by_gradient([GREEN_E,BLUE_A,ORANGE]).scale(2)
        text_c = VGroup(text8,text9,text10,text_b,re1,text4,text5,text6,text7)
        text11 = TexMobject(r"\lim_{x \to 0} \frac{\sin x }{x}=1").set_color_by_gradient([GREEN_E,BLUE_A,ORANGE]).scale(2)
        text12 = TextMobject("本期视频就就让我们来","证明","这个","简洁的结论","吧!").next_to(text11,UP)
        text12[1].set_color(ORANGE)
        text12[3].set_color(BLUE_E)
        text_d = VGroup(text11,text12)
        
        self.play(Write(text1),Write(Ale1))
        self.wait(1)
        self.play(Write(text2))
        self.play(ReplacementTransform(text1, text3))
        self.wait(3)
        self.play(ReplacementTransform(text_a,re1))
        self.play(FadeInFrom(text8,DOWN))
        self.play(Write(text4))
        self.wait(0.2)
        self.play(Write(text5))
        self.wait(0.2)
        self.play(Write(text6))
        self.wait(0.2)
        self.play(Write(text7))
        self.wait(0.5)
        self.play(FadeInFrom(text9,UP))
        self.play(Write(text10))
        self.wait(0.8)
        self.play(ApplyWave(text10))
        self.wait(1)
        self.play(Write(text_b))
        self.wait(1)
        self.play(Uncreate(text_c))
        self.play(FadeInFromPoint(text_d,np.array([4,0,0])))
        self.wait(1)

class second(Scene):
    def construct(self):
        text1 = TextMobject("错误证明","(切勿模仿!!)").scale(2)
        text1[0].set_color(RED)
        text1[1].set_color(YELLOW)
        text2 = TextMobject("初学者会认为可以用","洛必达法则","来求解")
        text3 = TextMobject("(先来复习一些什么叫","洛必达法则",")")
        text2[1].set_color(BLUE_B)
        text3[1].set_color(BLUE_B)
        text2.to_edge(DOWN)
        text3.to_edge(DOWN)
        text4 = TexMobject(r"\because \text{当}x =0 \text{时,} \sin x = 0 , x = 0")
        text6 = TexMobject(r"\lim_{x \to 0} \frac{\cos x }{1}")
        text5 = TexMobject(r"\lim_{x \to 0} \frac{\sin x }{x}\overset{\underset{L'H}{}}{=}").next_to(text6,LEFT)
        text7 = TexMobject(r"=\cos0=1").next_to(text6,RIGHT)
        text8 = TextMobject("于是","得证")
        text_a = VGroup(text5,text6,text7).set_color(YELLOW)
        text4.next_to(text_a,UP,.5).set_color(RED)
        text8.next_to(text_a,DOWN,.5).set_color(GREEN)
        img1 = ImageMobject("doge.png",height =1,invert = False)
        img1.next_to(text8,RIGHT)
        text9 = TextMobject("如果不考虑逻辑，这样貌似也可以做").to_edge(DOWN)
        text10 = TextMobject("但要是考虑逻辑，就说不通了").to_edge(DOWN)
        text_b = VGroup(text4,text6,text5,text7,text8)
        cro = Cross(text_b,stroke_color=RED,stroke_width =3)
        text11 = TextMobject("因为这样求解，涉及到$\sin x$的导数$\cos x$").to_edge(DOWN)
        text12 =TexMobject(r"(\sin x)'\overset{\underset{?}{}}{=} \cos x ···(1)")
        text12.set_color(GREEN).shift(UP*1.5+LEFT*1)
        text13 = TextMobject("但要证明(1)式的成立,又不得不得到(2)式的支持").to_edge(DOWN)
        text14 = TexMobject(r"\lim_{x \to 0} \frac{\sin x }{x}=1···(2)")
        text14.shift(DOWN+RIGHT*2).set_color(YELLOW)
        vec_1=Arrow(np.array([1.8,-3/6,0]),np.array([-0.8,1.3,0]),stroke_width = 5)
        vec_2=Arrow(np.array([-0.35,1.3,0]),np.array([2.2,-3/6,0]),stroke_width = 5)
        vec_1.set_color(GREEN)
        vec_2.set_color(RED)
        text15 = TextMobject("而现在我们又妄想用(1)式来证明(2)式").to_edge(DOWN)
        text16 = TextMobject("这显然是不正确的，犯了循环论证的错误").to_edge(DOWN)
        text17 = TextMobject(r"正确的证明顺序应该是$(2) \to (1)$").to_edge(DOWN)


        self.play(FadeInFrom(text1,DOWN))
        self.wait(1)
        self.play(FadeOut(text1))
        self.wait(1)
        self.play(Write(text2))
        self.wait(1)
        self.play(ReplacementTransform(text2,text3))
        self.wait(7)
        self.play(ReplacementTransform(text3,text9))
        self.play(Write(text4))
        self.wait(.5)
        self.play(Write(text5))
        self.wait(.5)
        self.play(Write(text6))
        self.wait(.5)
        self.play(Write(text7))
        self.wait(1)
        self.play(Write(text8),FadeIn(img1))
        self.wait(1)
        self.play(ReplacementTransform(text9,text10))
        self.play(Write(cro))
        self.wait(2)
        self.remove(cro,text4,text5,text6,text7,text8,img1)
        self.play(ReplacementTransform(text10,text11))
        self.wait(.5)
        self.play(Write(text12))
        self.wait(1)
        self.play(ReplacementTransform(text11,text13))
        self.play(Write(text14))
        self.play(Write(vec_1))
        self.wait(2)
        self.play(ReplacementTransform(text13,text15))
        self.play(Write(vec_2))
        self.wait(2)
        self.play(ReplacementTransform(text15,text16))
        self.wait(3)
        self.play(ReplacementTransform(text16,text17))
        self.play(FadeOut(vec_2))
        self.wait(2)

class yubei(Scene):
    def construct(self):
        text1 =TextMobject("预备知识").set_color_by_gradient([GREEN_E,GOLD_E]).scale(2)
        text2 = TextMobject("在开始证明前，还需要了解一些知识")
        text3 = TextMobject("这样可以帮助我们更好地理解")
        text2.to_edge(DOWN)
        text3.to_edge(DOWN)
        text4 = TextMobject("知识").scale(2.5).set_color(RED_B)
        text5 = TextMobject("三明治定理","(又称","夹逼定理","):").shift(UP*3+LEFT*3)
        text5[0].set_color_by_gradient([GREEN_C,YELLOW_E])
        text5[2].set_color_by_gradient([YELLOW_E,GREEN_C])
        text6 = TexMobject(r"\text{若对于所以在} a \text{附近的} x \text{都有} g(x) \le f(x) \le h(x)").set_color(GREEN_B)
        text7 = TexMobject(r"\text{且} \lim_{x \to a} g(x) = \lim_{x \to a} h(x) =L ").set_color(BLUE_E)
        text8 = TexMobject(r"\text{那么可得:} \lim_{x \to a} f(x) = L").set_color(GOLD)
        text6.next_to(text7,UP,0.5)
        text8.next_to(text7,DOWN,0.5)
        text9 = TextMobject("关于如何证明这个定理,","也许","将来会出一起视频讲讲").to_edge(DOWN)
        text9[1].set_color(YELLOW)
        text10 = TextMobject("现在你只要记住它即可").to_edge(DOWN)
        
        self.play(FadeInFrom(text1,DOWN))
        self.wait(1)
        self.play(FadeOut(text1))
        self.wait(1)
        self.play(Write(text2))
        self.play(Write(text4))
        self.wait(1)
        self.play(ReplacementTransform(text2,text3),Flash(text4,color=WHITE,flash_radius=1.7))
        self.wait(3)
        self.remove(text3)
        self.play(ReplacementTransform(text4,text5))
        self.wait(1)
        self.play(Write(text6))
        self.wait(1.5)
        self.play(Write(text7))
        self.wait(1.5)
        self.play(Write(text8))
        self.wait(2.5)
        self.play(Write(text9))
        self.wait(1)
        self.play(ReplacementTransform(text9,text10))
        self.wait(3)

class tu(Scene):
    def construct(self):
        text_a = TextMobject("正片开始").scale(2).set_color(ORANGE)
        line_1 = Line(np.array([-3,-1,0]),np.array([2,-1,0]))
        line_2 = Line(np.array([-3,-1,0]),np.array([1,2,0]))
        arc1=Arc(arc_center=3*LEFT+DOWN,radius=5,stroke_width=4.0,start_angle= 0,angle= asin(3/5),color=WHITE)
        arc2=Arc(arc_center=3*LEFT+DOWN,radius=0.7,stroke_width=4.0,start_angle= 0,angle= asin(3/5),color=WHITE)
        text1 = TexMobject(r"x").shift(2*LEFT+0.7*DOWN)
        text2 = TexMobject(r"O").next_to(np.array([-3,-1,0]),LEFT)
        text3 = TexMobject(r"A").next_to(np.array([1,2,0]),UP)
        text4 = TexMobject(r"B").next_to(np.array([2,-1,0]),DOWN)
        text5 = TexMobject(r"H").next_to(np.array([1,-1,0]),DOWN)
        line_3 = Line(np.array([2,-1,0]),np.array([1,2,0]))
        line_4 = DashedLine(np.array([1,2,0]),np.array([1,-1,0]))
        line_5 = Line(np.array([1,-0.7,0]),np.array([1.3,-0.7,0]))
        line_6 = Line(np.array([1.3,-0.7,0]),np.array([1.3,-1,0]))
        line_a = VGroup(line_5,line_6)
        line_7 = Line(np.array([2,-1,0]),np.array([2,11/4,0]))
        line_8 = Line(np.array([1,2,0]),np.array([2,11/4,0]))
        text6 = TexMobject(r"C").next_to(np.array([2,11/4,0]),RIGHT)
        text7 = TextMobject(r"首先,作出一个圆心角为$x$,半径为1的扇形").to_edge(DOWN)
        text8 = TextMobject(r"联结$AB$,过$A$做AH $\bot$ $OB$于$H$").to_edge(DOWN)
        text9 = TextMobject(r"过$B$做$\overset{\frown}{AB}$的切线交$OA$的延长线于$C$").to_edge(DOWN)
        text10 = TextMobject("1").next_to(line_1,DOWN)
        gr = VGroup(line_1,line_2,line_3,line_4,line_5,line_6,line_7,line_8,text1,text2,text3,text4,text5,text6,text10,arc1,arc2)
        text11 = TextMobject("根据图像的特征，我们不难发现").to_edge(DOWN)
        text12 = TextMobject(r"$\bigtriangleup OAB$ 包含在扇形$OAB$中，而扇形$OAB$ 也同样包含在$\bigtriangleup OCB$中 ").to_edge(DOWN).scale(0.8)
        text13 = TextMobject("因此我们就可以得出上述结论").to_edge(DOWN)
        text14 = TexMobject(r"S_{\bigtriangleup OAB } <S_{\text{扇形}OAB }<S_{\bigtriangleup OCB}").shift(UP*3+LEFT*3).set_color(YELLOW)
        text15 = TexMobject(r"\frac{\sin x}{2}<\frac{x}{2}<\frac{\tan x}{2}").next_to(text14,DOWN,.5).set_color(RED)
        text16 = TextMobject("根据已知的条件，它可以写成含$x$的式子").to_edge(DOWN)
        text17 = TexMobject(r"\sin x<x<\tan x~,~x \in (0,\frac{\pi }{2} ) ").next_to(text14,DOWN,.5).set_color(RED)
        text18 = TextMobject("对上式取倒数").to_edge(DOWN)
        text19 = TexMobject(r"\frac{1}{\sin x}>\frac{1}{x}>\frac{\cos x}{\sin x}").next_to(text17,DOWN,.5).set_color(BLUE)
        text20 = TexMobject(r"1>\frac{\sin x}{x}>\cos x").next_to(text19,DOWN,.5).set_color(GREEN)
        text21 = TextMobject(r"同乘上$\sin x$").to_edge(DOWN)
        text22 = TextMobject("这样，我们得到了一个重要的式子").to_edge(DOWN)
        rec1 = SurroundingRectangle(text20,fill_opacity = 0).set_color(YELLOW)
        text23 = TextMobject("对于式子的左右两边,在0处的右极限都为1").to_edge(DOWN)
        text24 = TexMobject(r"\lim_{x \to 0^{+}}1 = 1~~,~~\lim_{x \to 0^{+}}\cos x = 1").shift(UP).set_color(YELLOW)
        text25 = TextMobject("根据上面我们所提到的三明治定理，不难得到").to_edge(DOWN)
        text26 = TexMobject(r"\lim_{x \to 0^{+}}\frac{\sin x}{x} = 1").next_to(text24,DOWN,.5).set_color_by_gradient([GREEN,YELLOW,ORANGE])
        text27 = TextMobject("至此一半的证明就完成了").to_edge(DOWN)

        self.play(FadeInFrom(text_a,DOWN))
        self.wait(1)
        self.play(FadeOut(text_a))
        self.wait(1)
        self.play(Write(text7))
        self.play(Write(line_1),Write(line_2),Write(arc1),Write(arc2))
        self.play(Write(text2),Write(text3),Write(text4),Write(text1),Write(text10))
        self.wait(2)
        self.play(ReplacementTransform(text7,text8))
        self.play(Write(line_3))
        self.play(Write(line_4),Write(text5),Write(line_a))
        self.wait(3)
        self.play(ReplacementTransform(text8,text9))
        self.play(Write(line_7),Write(line_8),Write(text6))
        self.wait(3)
        self.play(gr.scale,0.9)
        self.play(gr.shift,RIGHT*4)
        self.wait(0.5)
        self.play(ReplacementTransform(text9,text11))
        self.wait(1)
        self.play(ReplacementTransform(text11,text12))
        self.wait(4)
        self.play(ReplacementTransform(text12,text13))
        self.play(Write(text14))
        self.wait(2)
        self.play(ReplacementTransform(text13,text16))
        self.wait(1)
        self.play(TransformFromCopy(text14,text15))
        self.wait(2)
        self.play(ReplacementTransform(text15,text17))
        self.wait(2)
        self.play(ReplacementTransform(text16,text18))
        self.wait(2)
        self.play(TransformFromCopy(text17,text19))
        self.wait(2)
        self.play(ReplacementTransform(text18,text21))
        self.wait(2)
        self.play(TransformFromCopy(text19,text20))
        self.wait(2)
        self.play(ReplacementTransform(text21,text22))
        self.wait(1)
        self.play(Write(rec1))
        self.play(FadeOut(rec1))
        self.wait(1)
        self.play(Uncreate(text22),Uncreate(text19),Uncreate(text17),Uncreate(text15),Uncreate(text14),Uncreate(gr))
        self.play(text20.scale,1.5)
        self.play(text20.shift,RIGHT*3+UP*4)
        self.wait(1)
        self.play(Write(text23))
        self.wait(.5)
        self.play(Write(text24))
        self.wait(2)
        self.play(ReplacementTransform(text23,text25))
        self.wait(.5)
        self.play(TransformFromCopy(text24,text26))
        self.wait(2)
        self.play(ReplacementTransform(text25,text27))
        self.play(Uncreate(text20),Uncreate(text24))
        self.play(text26.scale,2)
        self.play(text26.shift,UP)
        self.wait(2)

class lbd(Scene):
    def construct(self):
        text1 = TexMobject(r"\text{若}f(x),g(x)\text{可导}，")
        text2 = TexMobject(r"\text{且}f(a)=g(a)=0，")
        text3 = TexMobject(r"\text{那么}\lim_{x \to a} \frac{f(x)}{g(x)}=\lim_{x \to a}\frac{f'(x)}{g'(x)} ")
        text4 = TextMobject("洛").set_color(GREEN_A).to_corner(UL)
        text5 = TextMobject("必").set_color(GREEN_B).next_to(text4,DOWN)
        text6 = TextMobject("达").set_color(GREEN_C).next_to(text5,DOWN)
        text7 = TextMobject("法").set_color(GREEN_D).next_to(text6,DOWN)
        text8 = TextMobject("则").set_color(GREEN_E).next_to(text7,DOWN)
        text_a = VGroup(text4,text5,text6,text7,text8).scale(1)
        text1.next_to(text2,UP,1.5)
        text3.next_to(text2,DOWN,1.5)

        self.play(Write(text_a))
        self.wait(1)
        self.play(Write(text1))
        self.wait(0.5)
        self.play(Write(text2))
        self.wait(0.5)
        self.play(Write(text3))
        self.wait(1)

class tu_2(Scene):
    def construct(self):
        text1 = TextMobject("对于左极限的证明，可以利用已知的右极限来证明").to_edge(DOWN)
        text2 = TexMobject(R"\text{已知}\lim_{x \to 0^{+}}\frac{\sin x}{x} = 1,\text{证明}\lim_{x \to 0^{-}}\frac{\sin x}{x} = 1").to_edge(UP)
        text3 = TexMobject(R"\text{令}x = -t").next_to(text2,DOWN,.5).set_color(GREEN)
        text4 = TexMobject(R"\text{则}\lim_{x \to 0^{-}}\frac{\sin x}{x} =\lim_{-t \to 0^{-}}\frac{\sin (-t)}{-t}").next_to(text3,DOWN,.5).set_color(ORANGE)
        text5 = TexMobject(R"\text{即}\lim_{-t \to 0^{-}}\frac{\sin (-t)}{-t} =").set_color(BLUE)
        text6 = TexMobject(R"\lim_{t \to 0^{+}}\frac{\sin t}{t}").next_to(text5,RIGHT).set_color_by_gradient([GREEN,BLUE,YELLOW])
        text_a = VGroup(text5,text6).next_to(text4,DOWN,.5)
        text7 = TextMobject("一顿操作后，熟悉的家伙又出现了").to_edge(DOWN)
        rec1 = SurroundingRectangle(text6,fill_opacity = 0).set_color(YELLOW)
        text8 = TextMobject("尽管这里的变量为$t$,但这并不影响结论的使用").to_edge(DOWN)
        text9 = TextMobject("=1").next_to(text6,RIGHT).set_color_by_gradient([GREEN_E,BLUE_A,YELLOW_B])
        text10 = TextMobject("于是，我们就得到了我们想要的结论").to_edge(DOWN)
        text11 = TexMobject(r"\lim_{x \to 0^{-}}\frac{\sin x}{x} = 1").set_color_by_gradient([GREEN_E,BLUE_A,YELLOW_B]).shift(np.array([-3,3,0]))
        text_b = VGroup(text2,text3,text4,text5,text6,text9)
        text12 = TextMobject("与之前的结论相结合，便解决了问题").to_edge(DOWN)
        text13 = TexMobject(r"\lim_{x \to 0^{+}}\frac{\sin x}{x} = 1").set_color_by_gradient([GREEN,YELLOW,ORANGE]).shift(np.array([3,3,0]))
        vec_1=Arrow(np.array([-3,2.5,0]),np.array([-1,0.6,0]),stroke_width = 5).set_color(GOLD)
        vec_2=Arrow(np.array([3,2.5,0]),np.array([1,0.6,0]),stroke_width = 5).set_color(GOLD)
        text14 = TexMobject(r"\lim_{x \to 0}\frac{\sin x}{x} = 1").set_color_by_gradient([RED,YELLOW,ORANGE]).shift(np.array([0,-0.5,0])).scale(2)
        text15 = TextMobject("QED").shift(DOWN*2+RIGHT*4).set_color(YELLOW).scale(1.5)


        self.play(Write(text1))
        self.wait(1)
        self.play(Write(text2))
        self.wait(1)
        self.remove(text1)
        self.wait(.5)
        self.play(Write(text3))
        self.wait(1)
        self.play(Write(text4))
        self.wait(2.5)
        self.play(Write(text_a))
        self.wait(2.5)
        self.play(Write(text7))
        self.play(Write(rec1))
        self.play(FadeOut(rec1))
        self.wait(1)
        self.play(ReplacementTransform(text7,text8))
        self.wait(2)
        self.play(Write(text9))
        self.wait(1.5)
        self.play(ReplacementTransform(text8,text10))
        self.play(ReplacementTransform(text_b,text11))
        self.wait(1.5)
        self.play(ReplacementTransform(text10,text12))
        self.play(Write(text13))
        self.play(Write(vec_1),Write(vec_2))
        self.play(Write(text14))
        self.play(Write(text15),run_time = 5)
        self.wait(1.5)

class fengmian(Scene):
    def construct(self):
        text1 = TexMobject(r"\frac{\sin x}{x}").scale(4)

        self.play(Write(text1))
        self.wait(2)